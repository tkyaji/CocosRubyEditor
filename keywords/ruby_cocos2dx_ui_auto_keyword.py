def get_keywords():
	return {'classes': {'CCUI::RichElementCustomNode': {'base_class': 'CCUI::RichElement', 'ifunctions': {'init(tag, color, opacity, custom_node)': {'ret_type': 'bool', 'arguments': [{'type': 'int', 'name': 'tag'}, {'type': 'CC::Color3B', 'name': 'color'}, {'type': 'int', 'name': 'opacity'}, {'type': 'CC::Node', 'name': 'custom_node'}], 'sublime': 'init(${1:tag}, ${2:color}, ${3:opacity}, ${4:custom_node})$0'}}, 'sfunctions': {'create(tag, color, opacity, custom_node)': {'ret_type': 'CCUI::RichElementCustomNode', 'arguments': [{'type': 'int', 'name': 'tag'}, {'type': 'CC::Color3B', 'name': 'color'}, {'type': 'int', 'name': 'opacity'}, {'type': 'CC::Node', 'name': 'custom_node'}], 'sublime': 'create(${1:tag}, ${2:color}, ${3:opacity}, ${4:custom_node})$0'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::LinearLayoutParameter': {'base_class': 'CCUI::LayoutParameter', 'ifunctions': {'set_gravity(gravity)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'gravity'}], 'sublime': 'set_gravity(${1:gravity})$0'}, 'get_gravity()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_gravity'}}, 'sfunctions': {'create()': {'ret_type': 'CCUI::LinearLayoutParameter', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::TextAtlas': {'base_class': 'CCUI::Widget', 'ifunctions': {'get_string_length()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_string_length'}, 'set_property(string_value, char_map_file, item_width, item_height, start_char_map)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'string_value'}, {'type': 'string', 'name': 'char_map_file'}, {'type': 'int', 'name': 'item_width'}, {'type': 'int', 'name': 'item_height'}, {'type': 'string', 'name': 'start_char_map'}], 'sublime': 'set_property(${1:string_value}, ${2:char_map_file}, ${3:item_width}, ${4:item_height}, ${5:start_char_map})$0'}, 'set_string(value)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'value'}], 'sublime': 'set_string(${1:value})$0'}, 'adapt_renderers()': {'ret_type': 'void', 'arguments': [], 'sublime': 'adapt_renderers'}, 'get_string()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_string'}}, 'sfunctions': {'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create(string_value, char_map_file, item_width, item_height, start_char_map)': {'ret_type': 'CCUI::TextAtlas', 'arguments': [{'type': 'string', 'name': 'string_value'}, {'type': 'string', 'name': 'char_map_file'}, {'type': 'int', 'name': 'item_width'}, {'type': 'int', 'name': 'item_height'}, {'type': 'string', 'name': 'start_char_map'}], 'sublime': 'create(${1:string_value}, ${2:char_map_file}, ${3:item_width}, ${4:item_height}, ${5:start_char_map})$0'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}, 'create()': {'ret_type': 'CCUI::TextAtlas', 'arguments': [], 'sublime': 'create'}}}, 'CCUI::ImageView': {'base_class': 'CCUI::Widget', 'ifunctions': {'scale9_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'scale9_enabled?'}, 'load_texture(file_name, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_name'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_texture(${1:file_name}, ${2:tex_type})$0'}, 'get_cap_insets()': {'ret_type': 'CC::Rect', 'arguments': [], 'sublime': 'get_cap_insets'}, 'set_texture_rect(rect)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'rect'}], 'sublime': 'set_texture_rect(${1:rect})$0'}, 'load_texture(file_name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_name'}], 'sublime': 'load_texture(${1:file_name})$0'}, 'set_cap_insets(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_cap_insets(${1:cap_insets})$0'}, 'set_scale9_enabled(able)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'able'}], 'sublime': 'set_scale9_enabled(${1:able})$0'}}, 'sfunctions': {'create(image_file_name, tex_type)': {'ret_type': 'CCUI::ImageView', 'arguments': [{'type': 'string', 'name': 'image_file_name'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'create(${1:image_file_name}, ${2:tex_type})$0'}, 'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create(image_file_name)': {'ret_type': 'CCUI::ImageView', 'arguments': [{'type': 'string', 'name': 'image_file_name'}], 'sublime': 'create(${1:image_file_name})$0'}, 'create()': {'ret_type': 'CCUI::ImageView', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::ScrollView': {'base_class': 'CCUI::Layout', 'ifunctions': {'jump_to_percent_horizontal(percent)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'percent'}], 'sublime': 'jump_to_percent_horizontal(${1:percent})$0'}, 'jump_to_top_right()': {'ret_type': 'void', 'arguments': [], 'sublime': 'jump_to_top_right'}, 'scroll_to_percent_horizontal(percent, time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'percent'}, {'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_percent_horizontal(${1:percent}, ${2:time}, ${3:attenuated})$0'}, 'set_inner_container_size(size)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Size', 'name': 'size'}], 'sublime': 'set_inner_container_size(${1:size})$0'}, 'set_bounce_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_bounce_enabled(${1:enabled})$0'}, 'get_direction()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_direction'}, 'jump_to_bottom_right()': {'ret_type': 'void', 'arguments': [], 'sublime': 'jump_to_bottom_right'}, 'bounce_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'bounce_enabled?'}, 'scroll_to_top(time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_top(${1:time}, ${2:attenuated})$0'}, 'inertia_scroll_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'inertia_scroll_enabled?'}, 'get_inner_container_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_inner_container_size'}, 'scroll_to_bottom(time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_bottom(${1:time}, ${2:attenuated})$0'}, 'jump_to_percent_both_direction(percent)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Vec2', 'name': 'percent'}], 'sublime': 'jump_to_percent_both_direction(${1:percent})$0'}, 'jump_to_top_left()': {'ret_type': 'void', 'arguments': [], 'sublime': 'jump_to_top_left'}, 'scroll_to_left(time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_left(${1:time}, ${2:attenuated})$0'}, 'jump_to_right()': {'ret_type': 'void', 'arguments': [], 'sublime': 'jump_to_right'}, 'scroll_to_percent_vertical(percent, time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'percent'}, {'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_percent_vertical(${1:percent}, ${2:time}, ${3:attenuated})$0'}, 'scroll_to_top_right(time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_top_right(${1:time}, ${2:attenuated})$0'}, 'scroll_to_bottom_left(time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_bottom_left(${1:time}, ${2:attenuated})$0'}, 'get_inner_container()': {'ret_type': 'CCUI::Layout', 'arguments': [], 'sublime': 'get_inner_container'}, 'add_event_listener(callback)': {'ret_type': 'void', 'arguments': [{'type': 'Proc', 'name': 'callback'}], 'sublime': 'add_event_listener(${1:callback})$0'}, 'scroll_to_percent_both_direction(percent, time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Vec2', 'name': 'percent'}, {'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_percent_both_direction(${1:percent}, ${2:time}, ${3:attenuated})$0'}, 'jump_to_bottom_left()': {'ret_type': 'void', 'arguments': [], 'sublime': 'jump_to_bottom_left'}, 'set_inertia_scroll_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_inertia_scroll_enabled(${1:enabled})$0'}, 'jump_to_bottom()': {'ret_type': 'void', 'arguments': [], 'sublime': 'jump_to_bottom'}, 'scroll_to_top_left(time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_top_left(${1:time}, ${2:attenuated})$0'}, 'scroll_to_bottom_right(time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_bottom_right(${1:time}, ${2:attenuated})$0'}, 'scroll_to_right(time, attenuated)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'time'}, {'type': 'bool', 'name': 'attenuated'}], 'sublime': 'scroll_to_right(${1:time}, ${2:attenuated})$0'}, 'jump_to_top()': {'ret_type': 'void', 'arguments': [], 'sublime': 'jump_to_top'}, 'set_direction(dir)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'dir'}], 'sublime': 'set_direction(${1:dir})$0'}, 'jump_to_percent_vertical(percent)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'percent'}], 'sublime': 'jump_to_percent_vertical(${1:percent})$0'}, 'jump_to_left()': {'ret_type': 'void', 'arguments': [], 'sublime': 'jump_to_left'}}, 'sfunctions': {'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create()': {'ret_type': 'CCUI::ScrollView', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::HBox': {'base_class': 'CCUI::Layout', 'ifunctions': {}, 'sfunctions': {'create(size)': {'ret_type': 'CCUI::HBox', 'arguments': [{'type': 'CC::Size', 'name': 'size'}], 'sublime': 'create(${1:size})$0'}, 'create()': {'ret_type': 'CCUI::HBox', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::Slider': {'base_class': 'CCUI::Widget', 'ifunctions': {'get_cap_insets_progress_bar_rebderer()': {'ret_type': 'CC::Rect', 'arguments': [], 'sublime': 'get_cap_insets_progress_bar_rebderer'}, 'load_slid_ball_texture_normal(normal)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}], 'sublime': 'load_slid_ball_texture_normal(${1:normal})$0'}, 'set_zoom_scale(scale)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'scale'}], 'sublime': 'set_zoom_scale(${1:scale})$0'}, 'load_slid_ball_texture_disabled(disabled, res_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'disabled'}, {'type': 'int', 'name': 'res_type'}], 'sublime': 'load_slid_ball_texture_disabled(${1:disabled}, ${2:res_type})$0'}, 'load_slid_ball_textures(normal, pressed, disabled, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}, {'type': 'string', 'name': 'pressed'}, {'type': 'string', 'name': 'disabled'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_slid_ball_textures(${1:normal}, ${2:pressed}, ${3:disabled}, ${4:tex_type})$0'}, 'load_bar_texture(file_name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_name'}], 'sublime': 'load_bar_texture(${1:file_name})$0'}, 'get_percent()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_percent'}, 'load_slid_ball_textures(normal, pressed)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}, {'type': 'string', 'name': 'pressed'}], 'sublime': 'load_slid_ball_textures(${1:normal}, ${2:pressed})$0'}, 'load_bar_texture(file_name, res_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_name'}, {'type': 'int', 'name': 'res_type'}], 'sublime': 'load_bar_texture(${1:file_name}, ${2:res_type})$0'}, 'load_slid_ball_texture_normal(normal, res_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}, {'type': 'int', 'name': 'res_type'}], 'sublime': 'load_slid_ball_texture_normal(${1:normal}, ${2:res_type})$0'}, 'add_event_listener(callback)': {'ret_type': 'void', 'arguments': [{'type': 'Proc', 'name': 'callback'}], 'sublime': 'add_event_listener(${1:callback})$0'}, 'set_scale9_enabled(able)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'able'}], 'sublime': 'set_scale9_enabled(${1:able})$0'}, 'get_zoom_scale()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_zoom_scale'}, 'set_cap_inset_progress_bar_rebderer(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_cap_inset_progress_bar_rebderer(${1:cap_insets})$0'}, 'load_progress_bar_texture(file_name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_name'}], 'sublime': 'load_progress_bar_texture(${1:file_name})$0'}, 'load_slid_ball_texture_pressed(pressed)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'pressed'}], 'sublime': 'load_slid_ball_texture_pressed(${1:pressed})$0'}, 'load_slid_ball_textures(normal, pressed, disabled)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}, {'type': 'string', 'name': 'pressed'}, {'type': 'string', 'name': 'disabled'}], 'sublime': 'load_slid_ball_textures(${1:normal}, ${2:pressed}, ${3:disabled})$0'}, 'load_slid_ball_textures(normal)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}], 'sublime': 'load_slid_ball_textures(${1:normal})$0'}, 'set_cap_insets_bar_renderer(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_cap_insets_bar_renderer(${1:cap_insets})$0'}, 'scale9_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'scale9_enabled?'}, 'set_percent(percent)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'percent'}], 'sublime': 'set_percent(${1:percent})$0'}, 'get_cap_insets_bar_renderer()': {'ret_type': 'CC::Rect', 'arguments': [], 'sublime': 'get_cap_insets_bar_renderer'}, 'load_slid_ball_texture_pressed(pressed, res_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'pressed'}, {'type': 'int', 'name': 'res_type'}], 'sublime': 'load_slid_ball_texture_pressed(${1:pressed}, ${2:res_type})$0'}, 'set_cap_insets(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_cap_insets(${1:cap_insets})$0'}, 'load_progress_bar_texture(file_name, res_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_name'}, {'type': 'int', 'name': 'res_type'}], 'sublime': 'load_progress_bar_texture(${1:file_name}, ${2:res_type})$0'}, 'load_slid_ball_texture_disabled(disabled)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'disabled'}], 'sublime': 'load_slid_ball_texture_disabled(${1:disabled})$0'}}, 'sfunctions': {'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}, 'create()': {'ret_type': 'CCUI::Slider', 'arguments': [], 'sublime': 'create'}, 'create(bar_texture_name, normal_ball_texture_name, res_type)': {'ret_type': 'CCUI::Slider', 'arguments': [{'type': 'string', 'name': 'bar_texture_name'}, {'type': 'string', 'name': 'normal_ball_texture_name'}, {'type': 'int', 'name': 'res_type'}], 'sublime': 'create(${1:bar_texture_name}, ${2:normal_ball_texture_name}, ${3:res_type})$0'}, 'create(bar_texture_name, normal_ball_texture_name)': {'ret_type': 'CCUI::Slider', 'arguments': [{'type': 'string', 'name': 'bar_texture_name'}, {'type': 'string', 'name': 'normal_ball_texture_name'}], 'sublime': 'create(${1:bar_texture_name}, ${2:normal_ball_texture_name})$0'}}}, 'CCUI::Helper': {'ifunctions': {}, 'sfunctions': {'change_layout_system_active_state(b_active)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'b_active'}], 'sublime': 'change_layout_system_active_state(${1:b_active})$0'}, 'do_layout(root_node)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Node', 'name': 'root_node'}], 'sublime': 'do_layout(${1:root_node})$0'}, 'seek_widget_by_name(root, name)': {'ret_type': 'CCUI::Widget', 'arguments': [{'type': 'CCUI::Widget', 'name': 'root'}, {'type': 'string', 'name': 'name'}], 'sublime': 'seek_widget_by_name(${1:root}, ${2:name})$0'}, 'get_sub_string_of_utf8_string(str, start, length)': {'ret_type': 'string', 'arguments': [{'type': 'string', 'name': 'str'}, {'type': 'int', 'name': 'start'}, {'type': 'int', 'name': 'length'}], 'sublime': 'get_sub_string_of_utf8_string(${1:str}, ${2:start}, ${3:length})$0'}, 'seek_action_widget_by_action_tag(root, tag)': {'ret_type': 'CCUI::Widget', 'arguments': [{'type': 'CCUI::Widget', 'name': 'root'}, {'type': 'int', 'name': 'tag'}], 'sublime': 'seek_action_widget_by_action_tag(${1:root}, ${2:tag})$0'}, 'seek_widget_by_tag(root, tag)': {'ret_type': 'CCUI::Widget', 'arguments': [{'type': 'CCUI::Widget', 'name': 'root'}, {'type': 'int', 'name': 'tag'}], 'sublime': 'seek_widget_by_tag(${1:root}, ${2:tag})$0'}, 'restrict_cap_inset_rect(cap_insets, texture_size)': {'ret_type': 'CC::Rect', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}, {'type': 'CC::Size', 'name': 'texture_size'}], 'sublime': 'restrict_cap_inset_rect(${1:cap_insets}, ${2:texture_size})$0'}}}, 'CCUI::Text': {'base_class': 'CCUI::Widget', 'ifunctions': {'enable_outline(outline_color, outline_size)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color4B', 'name': 'outline_color'}, {'type': 'int', 'name': 'outline_size'}], 'sublime': 'enable_outline(${1:outline_color}, ${2:outline_size})$0'}, 'enable_shadow(shadow_color, offset)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color4B', 'name': 'shadow_color'}, {'type': 'CC::Size', 'name': 'offset'}], 'sublime': 'enable_shadow(${1:shadow_color}, ${2:offset})$0'}, 'touch_scale_change_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'touch_scale_change_enabled?'}, 'enable_outline(outline_color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color4B', 'name': 'outline_color'}], 'sublime': 'enable_outline(${1:outline_color})$0'}, 'disable_effect()': {'ret_type': 'void', 'arguments': [], 'sublime': 'disable_effect'}, 'set_text_color(color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color4B', 'name': 'color'}], 'sublime': 'set_text_color(${1:color})$0'}, 'enable_shadow()': {'ret_type': 'void', 'arguments': [], 'sublime': 'enable_shadow'}, 'set_text_area_size(size)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Size', 'name': 'size'}], 'sublime': 'set_text_area_size(${1:size})$0'}, 'get_text_horizontal_alignment()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_text_horizontal_alignment'}, 'get_string_length()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_string_length'}, 'get_text_area_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_text_area_size'}, 'get_type()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_type'}, 'enable_shadow(shadow_color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color4B', 'name': 'shadow_color'}], 'sublime': 'enable_shadow(${1:shadow_color})$0'}, 'get_auto_render_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_auto_render_size'}, 'set_font_name(name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'name'}], 'sublime': 'set_font_name(${1:name})$0'}, 'set_string(text)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'text'}], 'sublime': 'set_string(${1:text})$0'}, 'set_touch_scale_change_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_touch_scale_change_enabled(${1:enabled})$0'}, 'enable_shadow(shadow_color, offset, blur_radius)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color4B', 'name': 'shadow_color'}, {'type': 'CC::Size', 'name': 'offset'}, {'type': 'int', 'name': 'blur_radius'}], 'sublime': 'enable_shadow(${1:shadow_color}, ${2:offset}, ${3:blur_radius})$0'}, 'set_text_vertical_alignment(alignment)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'alignment'}], 'sublime': 'set_text_vertical_alignment(${1:alignment})$0'}, 'enable_glow(glow_color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color4B', 'name': 'glow_color'}], 'sublime': 'enable_glow(${1:glow_color})$0'}, 'get_font_name()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_font_name'}, 'get_text_color()': {'ret_type': 'CC::Color4B', 'arguments': [], 'sublime': 'get_text_color'}, 'set_text_horizontal_alignment(alignment)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'alignment'}], 'sublime': 'set_text_horizontal_alignment(${1:alignment})$0'}, 'get_font_size()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_font_size'}, 'get_string()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_string'}, 'get_text_vertical_alignment()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_text_vertical_alignment'}, 'set_font_size(size)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'size'}], 'sublime': 'set_font_size(${1:size})$0'}}, 'sfunctions': {'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}, 'create()': {'ret_type': 'CCUI::Text', 'arguments': [], 'sublime': 'create'}, 'create(text_content, font_name, font_size)': {'ret_type': 'CCUI::Text', 'arguments': [{'type': 'string', 'name': 'text_content'}, {'type': 'string', 'name': 'font_name'}, {'type': 'int', 'name': 'font_size'}], 'sublime': 'create(${1:text_content}, ${2:font_name}, ${3:font_size})$0'}}}, 'CCUI::RichText': {'base_class': 'CCUI::Widget', 'ifunctions': {'set_vertical_space(space)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'space'}], 'sublime': 'set_vertical_space(${1:space})$0'}, 'remove_element(element)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::RichElement', 'name': 'element'}], 'sublime': 'remove_element(${1:element})$0'}, 'set_anchor_point(pt)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Vec2', 'name': 'pt'}], 'sublime': 'set_anchor_point(${1:pt})$0'}, 'remove_element(index)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'index'}], 'sublime': 'remove_element(${1:index})$0'}, 'insert_element(element, index)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::RichElement', 'name': 'element'}, {'type': 'int', 'name': 'index'}], 'sublime': 'insert_element(${1:element}, ${2:index})$0'}, 'ignore_content_adapt_with_size(ignore)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'ignore'}], 'sublime': 'ignore_content_adapt_with_size(${1:ignore})$0'}, 'push_back_element(element)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::RichElement', 'name': 'element'}], 'sublime': 'push_back_element(${1:element})$0'}, 'format_text()': {'ret_type': 'void', 'arguments': [], 'sublime': 'format_text'}}, 'sfunctions': {'create()': {'ret_type': 'CCUI::RichText', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::ListView': {'base_class': 'CCUI::ScrollView', 'ifunctions': {'get_index(item)': {'ret_type': 'int', 'arguments': [{'type': 'CCUI::Widget', 'name': 'item'}], 'sublime': 'get_index(${1:item})$0'}, 'push_back_default_item()': {'ret_type': 'void', 'arguments': [], 'sublime': 'push_back_default_item'}, 'remove_last_item()': {'ret_type': 'void', 'arguments': [], 'sublime': 'remove_last_item'}, 'push_back_custom_item(item)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::Widget', 'name': 'item'}], 'sublime': 'push_back_custom_item(${1:item})$0'}, 'insert_default_item(index)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'index'}], 'sublime': 'insert_default_item(${1:index})$0'}, 'set_items_margin(margin)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'margin'}], 'sublime': 'set_items_margin(${1:margin})$0'}, 'request_refresh_view()': {'ret_type': 'void', 'arguments': [], 'sublime': 'request_refresh_view'}, 'get_items_margin()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_items_margin'}, 'refresh_view()': {'ret_type': 'void', 'arguments': [], 'sublime': 'refresh_view'}, 'get_cur_selected_index()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_cur_selected_index'}, 'remove_all_items()': {'ret_type': 'void', 'arguments': [], 'sublime': 'remove_all_items'}, 'get_items()': {'ret_type': 'CC::Vector<cocos2d::ui::Widget *>', 'arguments': [], 'sublime': 'get_items'}, 'get_item(index)': {'ret_type': 'CCUI::Widget', 'arguments': [{'type': 'int', 'name': 'index'}], 'sublime': 'get_item(${1:index})$0'}, 'remove_item(index)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'index'}], 'sublime': 'remove_item(${1:index})$0'}, 'insert_custom_item(item, index)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::Widget', 'name': 'item'}, {'type': 'int', 'name': 'index'}], 'sublime': 'insert_custom_item(${1:item}, ${2:index})$0'}, 'do_layout()': {'ret_type': 'void', 'arguments': [], 'sublime': 'do_layout'}, 'set_item_model(model)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::Widget', 'name': 'model'}], 'sublime': 'set_item_model(${1:model})$0'}, 'set_gravity(gravity)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'gravity'}], 'sublime': 'set_gravity(${1:gravity})$0'}, 'add_event_listener(callback)': {'ret_type': 'void', 'arguments': [{'type': 'Proc', 'name': 'callback'}], 'sublime': 'add_event_listener(${1:callback})$0'}}, 'sfunctions': {'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create()': {'ret_type': 'CCUI::ListView', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::Layout': {'base_class': 'CCUI::Widget', 'ifunctions': {'get_back_ground_image_color()': {'ret_type': 'CC::Color3B', 'arguments': [], 'sublime': 'get_back_ground_image_color'}, 'get_layout_type()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_layout_type'}, 'remove_back_ground_image()': {'ret_type': 'void', 'arguments': [], 'sublime': 'remove_back_ground_image'}, 'get_back_ground_color_type()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_back_ground_color_type'}, 'set_back_ground_image_scale9_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_back_ground_image_scale9_enabled(${1:enabled})$0'}, 'set_back_ground_color_type(type)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'type'}], 'sublime': 'set_back_ground_color_type(${1:type})$0'}, 'set_back_ground_color(color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color3B', 'name': 'color'}], 'sublime': 'set_back_ground_color(${1:color})$0'}, 'set_back_ground_color_vector(vector)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Vec2', 'name': 'vector'}], 'sublime': 'set_back_ground_color_vector(${1:vector})$0'}, 'get_back_ground_image_cap_insets()': {'ret_type': 'CC::Rect', 'arguments': [], 'sublime': 'get_back_ground_image_cap_insets'}, 'set_back_ground_image_color(color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color3B', 'name': 'color'}], 'sublime': 'set_back_ground_image_color(${1:color})$0'}, 'set_clipping_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_clipping_enabled(${1:enabled})$0'}, 'set_back_ground_image_cap_insets(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_back_ground_image_cap_insets(${1:cap_insets})$0'}, 'set_pass_focus_to_child(pass)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'pass'}], 'sublime': 'set_pass_focus_to_child(${1:pass})$0'}, 'get_back_ground_end_color()': {'ret_type': 'CC::Color3B', 'arguments': [], 'sublime': 'get_back_ground_end_color'}, 'clipping_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'clipping_enabled?'}, 'force_do_layout()': {'ret_type': 'void', 'arguments': [], 'sublime': 'force_do_layout'}, 'back_ground_image_scale9_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'back_ground_image_scale9_enabled?'}, 'get_back_ground_image_texture_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_back_ground_image_texture_size'}, 'set_layout_type(type)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'type'}], 'sublime': 'set_layout_type(${1:type})$0'}, 'set_back_ground_image_opacity(opacity)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'opacity'}], 'sublime': 'set_back_ground_image_opacity(${1:opacity})$0'}, 'set_loop_focus(loop)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'loop'}], 'sublime': 'set_loop_focus(${1:loop})$0'}, 'get_back_ground_color_vector()': {'ret_type': 'CC::Vec2', 'arguments': [], 'sublime': 'get_back_ground_color_vector'}, 'loop_focus?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'loop_focus?'}, 'get_back_ground_color()': {'ret_type': 'CC::Color3B', 'arguments': [], 'sublime': 'get_back_ground_color'}, 'set_back_ground_image(file_name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_name'}], 'sublime': 'set_back_ground_image(${1:file_name})$0'}, 'get_back_ground_color_opacity()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_back_ground_color_opacity'}, 'pass_focus_to_child?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'pass_focus_to_child?'}, 'set_clipping_type(type)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'type'}], 'sublime': 'set_clipping_type(${1:type})$0'}, 'get_back_ground_start_color()': {'ret_type': 'CC::Color3B', 'arguments': [], 'sublime': 'get_back_ground_start_color'}, 'request_do_layout()': {'ret_type': 'void', 'arguments': [], 'sublime': 'request_do_layout'}, 'get_back_ground_image_opacity()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_back_ground_image_opacity'}, 'set_back_ground_image(file_name, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_name'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'set_back_ground_image(${1:file_name}, ${2:tex_type})$0'}, 'set_back_ground_color_opacity(opacity)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'opacity'}], 'sublime': 'set_back_ground_color_opacity(${1:opacity})$0'}, 'set_back_ground_color(start_color, end_color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color3B', 'name': 'start_color'}, {'type': 'CC::Color3B', 'name': 'end_color'}], 'sublime': 'set_back_ground_color(${1:start_color}, ${2:end_color})$0'}, 'get_clipping_type()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_clipping_type'}}, 'sfunctions': {'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create()': {'ret_type': 'CCUI::Layout', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::CheckBox': {'base_class': 'CCUI::Widget', 'ifunctions': {'load_texture_back_ground(back_ground, type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'back_ground'}, {'type': 'int', 'name': 'type'}], 'sublime': 'load_texture_back_ground(${1:back_ground}, ${2:type})$0'}, 'load_textures(back_ground, back_ground_selected, cross, back_ground_disabled, front_cross_disabled)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'back_ground'}, {'type': 'string', 'name': 'back_ground_selected'}, {'type': 'string', 'name': 'cross'}, {'type': 'string', 'name': 'back_ground_disabled'}, {'type': 'string', 'name': 'front_cross_disabled'}], 'sublime': 'load_textures(${1:back_ground}, ${2:back_ground_selected}, ${3:cross}, ${4:back_ground_disabled}, ${5:front_cross_disabled})$0'}, 'load_texture_back_ground(back_ground)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'back_ground'}], 'sublime': 'load_texture_back_ground(${1:back_ground})$0'}, 'load_texture_back_ground_selected(back_ground_selected, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'back_ground_selected'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_texture_back_ground_selected(${1:back_ground_selected}, ${2:tex_type})$0'}, 'load_texture_back_ground_disabled(back_ground_disabled, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'back_ground_disabled'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_texture_back_ground_disabled(${1:back_ground_disabled}, ${2:tex_type})$0'}, 'set_selected(selected)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'selected'}], 'sublime': 'set_selected(${1:selected})$0'}, 'load_texture_back_ground_selected(back_ground_selected)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'back_ground_selected'}], 'sublime': 'load_texture_back_ground_selected(${1:back_ground_selected})$0'}, 'load_texture_front_cross_disabled(front_cross_disabled, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'front_cross_disabled'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_texture_front_cross_disabled(${1:front_cross_disabled}, ${2:tex_type})$0'}, 'add_event_listener(callback)': {'ret_type': 'void', 'arguments': [{'type': 'Proc', 'name': 'callback'}], 'sublime': 'add_event_listener(${1:callback})$0'}, 'load_textures(back_ground, back_ground_selected, cross, back_ground_disabled, front_cross_disabled, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'back_ground'}, {'type': 'string', 'name': 'back_ground_selected'}, {'type': 'string', 'name': 'cross'}, {'type': 'string', 'name': 'back_ground_disabled'}, {'type': 'string', 'name': 'front_cross_disabled'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_textures(${1:back_ground}, ${2:back_ground_selected}, ${3:cross}, ${4:back_ground_disabled}, ${5:front_cross_disabled}, ${6:tex_type})$0'}, 'set_zoom_scale(scale)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'scale'}], 'sublime': 'set_zoom_scale(${1:scale})$0'}, 'get_zoom_scale()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_zoom_scale'}, 'load_texture_back_ground_disabled(back_ground_disabled)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'back_ground_disabled'}], 'sublime': 'load_texture_back_ground_disabled(${1:back_ground_disabled})$0'}, 'load_texture_front_cross_disabled(front_cross_disabled)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'front_cross_disabled'}], 'sublime': 'load_texture_front_cross_disabled(${1:front_cross_disabled})$0'}, 'selected?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'selected?'}, 'load_texture_front_cross()': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': ''}], 'sublime': 'load_texture_front_cross(${1:})$0'}, 'load_texture_front_cross(, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': ''}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_texture_front_cross(${1:}, ${2:tex_type})$0'}}, 'sfunctions': {'create(back_ground, back_ground_seleted, cross, back_ground_disabled, front_cross_disabled)': {'ret_type': 'CCUI::CheckBox', 'arguments': [{'type': 'string', 'name': 'back_ground'}, {'type': 'string', 'name': 'back_ground_seleted'}, {'type': 'string', 'name': 'cross'}, {'type': 'string', 'name': 'back_ground_disabled'}, {'type': 'string', 'name': 'front_cross_disabled'}], 'sublime': 'create(${1:back_ground}, ${2:back_ground_seleted}, ${3:cross}, ${4:back_ground_disabled}, ${5:front_cross_disabled})$0'}, 'create()': {'ret_type': 'CCUI::CheckBox', 'arguments': [], 'sublime': 'create'}, 'create(back_ground, cross, tex_type)': {'ret_type': 'CCUI::CheckBox', 'arguments': [{'type': 'string', 'name': 'back_ground'}, {'type': 'string', 'name': 'cross'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'create(${1:back_ground}, ${2:cross}, ${3:tex_type})$0'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}, 'create(back_ground, back_ground_seleted, cross, back_ground_disabled, front_cross_disabled, tex_type)': {'ret_type': 'CCUI::CheckBox', 'arguments': [{'type': 'string', 'name': 'back_ground'}, {'type': 'string', 'name': 'back_ground_seleted'}, {'type': 'string', 'name': 'cross'}, {'type': 'string', 'name': 'back_ground_disabled'}, {'type': 'string', 'name': 'front_cross_disabled'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'create(${1:back_ground}, ${2:back_ground_seleted}, ${3:cross}, ${4:back_ground_disabled}, ${5:front_cross_disabled}, ${6:tex_type})$0'}, 'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create(back_ground, cross)': {'ret_type': 'CCUI::CheckBox', 'arguments': [{'type': 'string', 'name': 'back_ground'}, {'type': 'string', 'name': 'cross'}], 'sublime': 'create(${1:back_ground}, ${2:cross})$0'}}}, 'CCUI::VBox': {'base_class': 'CCUI::Layout', 'ifunctions': {}, 'sfunctions': {'create(size)': {'ret_type': 'CCUI::VBox', 'arguments': [{'type': 'CC::Size', 'name': 'size'}], 'sublime': 'create(${1:size})$0'}, 'create()': {'ret_type': 'CCUI::VBox', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::RelativeBox': {'base_class': 'CCUI::Layout', 'ifunctions': {}, 'sfunctions': {'create(size)': {'ret_type': 'CCUI::RelativeBox', 'arguments': [{'type': 'CC::Size', 'name': 'size'}], 'sublime': 'create(${1:size})$0'}, 'create()': {'ret_type': 'CCUI::RelativeBox', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::TextField': {'base_class': 'CCUI::Widget', 'ifunctions': {'get_password_style_text()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_password_style_text'}, 'set_text_color(text_color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color4B', 'name': 'text_color'}], 'sublime': 'set_text_color(${1:text_color})$0'}, 'set_text_vertical_alignment(alignment)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'alignment'}], 'sublime': 'set_text_vertical_alignment(${1:alignment})$0'}, 'get_font_name()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_font_name'}, 'get_place_holder()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_place_holder'}, 'set_insert_text(insert_text)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'insert_text'}], 'sublime': 'set_insert_text(${1:insert_text})$0'}, 'set_touch_area_enabled(enable)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enable'}], 'sublime': 'set_touch_area_enabled(${1:enable})$0'}, 'get_attach_with_ime()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'get_attach_with_ime'}, 'password_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'password_enabled?'}, 'set_password_style_text(style_text)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'style_text'}], 'sublime': 'set_password_style_text(${1:style_text})$0'}, 'get_delete_backward()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'get_delete_backward'}, 'set_attach_with_ime(attach)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'attach'}], 'sublime': 'set_attach_with_ime(${1:attach})$0'}, 'get_max_length()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_max_length'}, 'did_not_select_self()': {'ret_type': 'void', 'arguments': [], 'sublime': 'did_not_select_self'}, 'set_detach_with_ime(detach)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'detach'}], 'sublime': 'set_detach_with_ime(${1:detach})$0'}, 'get_insert_text()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'get_insert_text'}, 'get_auto_render_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_auto_render_size'}, 'get_touch_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_touch_size'}, 'set_font_name(name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'name'}], 'sublime': 'set_font_name(${1:name})$0'}, 'max_length_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'max_length_enabled?'}, 'set_string(text)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'text'}], 'sublime': 'set_string(${1:text})$0'}, 'set_max_length(length)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'length'}], 'sublime': 'set_max_length(${1:length})$0'}, 'set_delete_backward(delete_backward)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'delete_backward'}], 'sublime': 'set_delete_backward(${1:delete_backward})$0'}, 'set_max_length_enabled(enable)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enable'}], 'sublime': 'set_max_length_enabled(${1:enable})$0'}, 'add_event_listener(callback)': {'ret_type': 'void', 'arguments': [{'type': 'Proc', 'name': 'callback'}], 'sublime': 'add_event_listener(${1:callback})$0'}, 'attach_with_ime()': {'ret_type': 'void', 'arguments': [], 'sublime': 'attach_with_ime'}, 'get_detach_with_ime()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'get_detach_with_ime'}, 'set_place_holder_color(color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color3B', 'name': 'color'}], 'sublime': 'set_place_holder_color(${1:color})$0'}, 'set_text_area_size(size)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Size', 'name': 'size'}], 'sublime': 'set_text_area_size(${1:size})$0'}, 'get_place_holder_color()': {'ret_type': 'CC::Color4B', 'arguments': [], 'sublime': 'get_place_holder_color'}, 'set_text_horizontal_alignment(alignment)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'alignment'}], 'sublime': 'set_text_horizontal_alignment(${1:alignment})$0'}, 'get_font_size()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_font_size'}, 'get_string()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_string'}, 'get_string_length()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_string_length'}, 'set_place_holder(value)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'value'}], 'sublime': 'set_place_holder(${1:value})$0'}, 'hit_test(pt)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Vec2', 'name': 'pt'}], 'sublime': 'hit_test(${1:pt})$0'}, 'set_password_enabled(enable)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enable'}], 'sublime': 'set_password_enabled(${1:enable})$0'}, 'set_touch_size(size)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Size', 'name': 'size'}], 'sublime': 'set_touch_size(${1:size})$0'}, 'set_font_size(size)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'size'}], 'sublime': 'set_font_size(${1:size})$0'}}, 'sfunctions': {'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create(placeholder, font_name, font_size)': {'ret_type': 'CCUI::TextField', 'arguments': [{'type': 'string', 'name': 'placeholder'}, {'type': 'string', 'name': 'font_name'}, {'type': 'int', 'name': 'font_size'}], 'sublime': 'create(${1:placeholder}, ${2:font_name}, ${3:font_size})$0'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}, 'create()': {'ret_type': 'CCUI::TextField', 'arguments': [], 'sublime': 'create'}}}, 'CCUI::RelativeLayoutParameter': {'base_class': 'CCUI::LayoutParameter', 'ifunctions': {'set_align(align)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'align'}], 'sublime': 'set_align(${1:align})$0'}, 'set_relative_to_widget_name(name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'name'}], 'sublime': 'set_relative_to_widget_name(${1:name})$0'}, 'set_relative_name(name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'name'}], 'sublime': 'set_relative_name(${1:name})$0'}, 'get_relative_to_widget_name()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_relative_to_widget_name'}, 'get_relative_name()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_relative_name'}, 'get_align()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_align'}}, 'sfunctions': {'create()': {'ret_type': 'CCUI::RelativeLayoutParameter', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::Scale9Sprite': {'base_class': 'CC::Node', 'ifunctions': {'set_flipped_x(flipped_x)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'flipped_x'}], 'sublime': 'set_flipped_x(${1:flipped_x})$0'}, 'get_inset_bottom()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_inset_bottom'}, 'set_inset_bottom(bottom_inset)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'bottom_inset'}], 'sublime': 'set_inset_bottom(${1:bottom_inset})$0'}, 'init_with_sprite_frame_name(sprite_frame_name)': {'ret_type': 'bool', 'arguments': [{'type': 'string', 'name': 'sprite_frame_name'}], 'sublime': 'init_with_sprite_frame_name(${1:sprite_frame_name})$0'}, 'get_inset_right()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_inset_right'}, 'get_inset_top()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_inset_top'}, 'init_with_file(cap_insets, file)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}, {'type': 'string', 'name': 'file'}], 'sublime': 'init_with_file(${1:cap_insets}, ${2:file})$0'}, 'update_with_sprite(sprite, rect, rotated, cap_insets)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Sprite', 'name': 'sprite'}, {'type': 'CC::Rect', 'name': 'rect'}, {'type': 'bool', 'name': 'rotated'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'update_with_sprite(${1:sprite}, ${2:rect}, ${3:rotated}, ${4:cap_insets})$0'}, 'get_sprite()': {'ret_type': 'CC::Sprite', 'arguments': [], 'sublime': 'get_sprite'}, 'update_with_sprite(sprite, rect, rotated, offset, original_size, cap_insets)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Sprite', 'name': 'sprite'}, {'type': 'CC::Rect', 'name': 'rect'}, {'type': 'bool', 'name': 'rotated'}, {'type': 'CC::Vec2', 'name': 'offset'}, {'type': 'CC::Size', 'name': 'original_size'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'update_with_sprite(${1:sprite}, ${2:rect}, ${3:rotated}, ${4:offset}, ${5:original_size}, ${6:cap_insets})$0'}, 'set_sprite_frame(sprite_frame)': {'ret_type': 'void', 'arguments': [{'type': 'CC::SpriteFrame', 'name': 'sprite_frame'}], 'sublime': 'set_sprite_frame(${1:sprite_frame})$0'}, 'set_state(state)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'state'}], 'sublime': 'set_state(${1:state})$0'}, 'resizable_sprite_with_cap_insets(cap_insets)': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'resizable_sprite_with_cap_insets(${1:cap_insets})$0'}, 'init()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'init'}, 'init_with_file(file, rect, cap_insets)': {'ret_type': 'bool', 'arguments': [{'type': 'string', 'name': 'file'}, {'type': 'CC::Rect', 'name': 'rect'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'init_with_file(${1:file}, ${2:rect}, ${3:cap_insets})$0'}, 'get_original_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_original_size'}, 'init(sprite, rect, cap_insets)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Sprite', 'name': 'sprite'}, {'type': 'CC::Rect', 'name': 'rect'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'init(${1:sprite}, ${2:rect}, ${3:cap_insets})$0'}, 'set_inset_top(top_inset)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'top_inset'}], 'sublime': 'set_inset_top(${1:top_inset})$0'}, 'init_with_sprite_frame(sprite_frame)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::SpriteFrame', 'name': 'sprite_frame'}], 'sublime': 'init_with_sprite_frame(${1:sprite_frame})$0'}, 'flipped_x?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'flipped_x?'}, 'disable_cascade_opacity()': {'ret_type': 'void', 'arguments': [], 'sublime': 'disable_cascade_opacity'}, 'init(sprite, rect, rotated, cap_insets)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Sprite', 'name': 'sprite'}, {'type': 'CC::Rect', 'name': 'rect'}, {'type': 'bool', 'name': 'rotated'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'init(${1:sprite}, ${2:rect}, ${3:rotated}, ${4:cap_insets})$0'}, 'flipped_y?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'flipped_y?'}, 'get_cap_insets()': {'ret_type': 'CC::Rect', 'arguments': [], 'sublime': 'get_cap_insets'}, 'disable_cascade_color()': {'ret_type': 'void', 'arguments': [], 'sublime': 'disable_cascade_color'}, 'get_inset_left()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_inset_left'}, 'init_with_sprite_frame(sprite_frame, cap_insets)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::SpriteFrame', 'name': 'sprite_frame'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'init_with_sprite_frame(${1:sprite_frame}, ${2:cap_insets})$0'}, 'set_scale9_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_scale9_enabled(${1:enabled})$0'}, 'init(sprite, rect, rotated, offset, original_size, cap_insets)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Sprite', 'name': 'sprite'}, {'type': 'CC::Rect', 'name': 'rect'}, {'type': 'bool', 'name': 'rotated'}, {'type': 'CC::Vec2', 'name': 'offset'}, {'type': 'CC::Size', 'name': 'original_size'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'init(${1:sprite}, ${2:rect}, ${3:rotated}, ${4:offset}, ${5:original_size}, ${6:cap_insets})$0'}, 'set_sprite_frame(sprite_frame, cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::SpriteFrame', 'name': 'sprite_frame'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_sprite_frame(${1:sprite_frame}, ${2:cap_insets})$0'}, 'set_cap_insets(rect)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'rect'}], 'sublime': 'set_cap_insets(${1:rect})$0'}, 'set_preferred_size(size)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Size', 'name': 'size'}], 'sublime': 'set_preferred_size(${1:size})$0'}, 'set_flipped_y(flipped_y)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'flipped_y'}], 'sublime': 'set_flipped_y(${1:flipped_y})$0'}, 'scale9_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'scale9_enabled?'}, 'init_with_sprite_frame_name(sprite_frame_name, cap_insets)': {'ret_type': 'bool', 'arguments': [{'type': 'string', 'name': 'sprite_frame_name'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'init_with_sprite_frame_name(${1:sprite_frame_name}, ${2:cap_insets})$0'}, 'init_with_file(file, rect)': {'ret_type': 'bool', 'arguments': [{'type': 'string', 'name': 'file'}, {'type': 'CC::Rect', 'name': 'rect'}], 'sublime': 'init_with_file(${1:file}, ${2:rect})$0'}, 'init_with_file(file)': {'ret_type': 'bool', 'arguments': [{'type': 'string', 'name': 'file'}], 'sublime': 'init_with_file(${1:file})$0'}, 'set_inset_right(right_inset)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'right_inset'}], 'sublime': 'set_inset_right(${1:right_inset})$0'}, 'set_inset_left(left_inset)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'left_inset'}], 'sublime': 'set_inset_left(${1:left_inset})$0'}, 'get_preferred_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_preferred_size'}}, 'sfunctions': {'create_with_sprite_frame_name(sprite_frame_name, cap_insets)': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [{'type': 'string', 'name': 'sprite_frame_name'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'create_with_sprite_frame_name(${1:sprite_frame_name}, ${2:cap_insets})$0'}, 'create_with_sprite_frame(sprite_frame, cap_insets)': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [{'type': 'CC::SpriteFrame', 'name': 'sprite_frame'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'create_with_sprite_frame(${1:sprite_frame}, ${2:cap_insets})$0'}, 'create()': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [], 'sublime': 'create'}, 'create(file, rect, cap_insets)': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [{'type': 'string', 'name': 'file'}, {'type': 'CC::Rect', 'name': 'rect'}, {'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'create(${1:file}, ${2:rect}, ${3:cap_insets})$0'}, 'create(file, rect)': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [{'type': 'string', 'name': 'file'}, {'type': 'CC::Rect', 'name': 'rect'}], 'sublime': 'create(${1:file}, ${2:rect})$0'}, 'create_with_sprite_frame_name(sprite_frame_name)': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [{'type': 'string', 'name': 'sprite_frame_name'}], 'sublime': 'create_with_sprite_frame_name(${1:sprite_frame_name})$0'}, 'create(cap_insets, file)': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}, {'type': 'string', 'name': 'file'}], 'sublime': 'create(${1:cap_insets}, ${2:file})$0'}, 'create(file)': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [{'type': 'string', 'name': 'file'}], 'sublime': 'create(${1:file})$0'}, 'create_with_sprite_frame(sprite_frame)': {'ret_type': 'CCUI::Scale9Sprite', 'arguments': [{'type': 'CC::SpriteFrame', 'name': 'sprite_frame'}], 'sublime': 'create_with_sprite_frame(${1:sprite_frame})$0'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::EditBox': {'base_class': 'CCUI::Widget', 'ifunctions': {'init_with_size_and_background_sprite(size, p_normal9_sprite_bg)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Size', 'name': 'size'}, {'type': 'string', 'name': 'p_normal9_sprite_bg'}], 'sublime': 'init_with_size_and_background_sprite(${1:size}, ${2:p_normal9_sprite_bg})$0'}, 'set_font_color(color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color3B', 'name': 'color'}], 'sublime': 'set_font_color(${1:color})$0'}, 'unregister_script_edit_box_handler()': {'ret_type': 'void', 'arguments': [], 'sublime': 'unregister_script_edit_box_handler'}, 'get_text()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_text'}, 'get_max_length()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_max_length'}, 'set_place_holder(p_text)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'p_text'}], 'sublime': 'set_place_holder(${1:p_text})$0'}, 'set_font_size(font_size)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'font_size'}], 'sublime': 'set_font_size(${1:font_size})$0'}, 'keyboard_did_show(info)': {'ret_type': 'void', 'arguments': [{'type': 'IMEKeyboardNotificationInfo', 'name': 'info'}], 'sublime': 'keyboard_did_show(${1:info})$0'}, 'set_input_mode(input_mode)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'input_mode'}], 'sublime': 'set_input_mode(${1:input_mode})$0'}, 'touch_down_action(sender, control_event)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Ref', 'name': 'sender'}, {'type': 'int', 'name': 'control_event'}], 'sublime': 'touch_down_action(${1:sender}, ${2:control_event})$0'}, 'set_max_length(max_length)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'max_length'}], 'sublime': 'set_max_length(${1:max_length})$0'}, 'register_script_edit_box_handler(handler)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'handler'}], 'sublime': 'register_script_edit_box_handler(${1:handler})$0'}, 'set_text(p_text)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'p_text'}], 'sublime': 'set_text(${1:p_text})$0'}, 'keyboard_will_show(info)': {'ret_type': 'void', 'arguments': [{'type': 'IMEKeyboardNotificationInfo', 'name': 'info'}], 'sublime': 'keyboard_will_show(${1:info})$0'}, 'set_input_flag(input_flag)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'input_flag'}], 'sublime': 'set_input_flag(${1:input_flag})$0'}, 'init_with_size_and_background_sprite(size, p_normal9_sprite_bg, tex_type)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Size', 'name': 'size'}, {'type': 'string', 'name': 'p_normal9_sprite_bg'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'init_with_size_and_background_sprite(${1:size}, ${2:p_normal9_sprite_bg}, ${3:tex_type})$0'}, 'set_placeholder_font(p_font_name, font_size)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'p_font_name'}, {'type': 'int', 'name': 'font_size'}], 'sublime': 'set_placeholder_font(${1:p_font_name}, ${2:font_size})$0'}, 'set_return_type(return_type)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'return_type'}], 'sublime': 'set_return_type(${1:return_type})$0'}, 'set_font_name(p_font_name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'p_font_name'}], 'sublime': 'set_font_name(${1:p_font_name})$0'}, 'keyboard_will_hide(info)': {'ret_type': 'void', 'arguments': [{'type': 'IMEKeyboardNotificationInfo', 'name': 'info'}], 'sublime': 'keyboard_will_hide(${1:info})$0'}, 'set_placeholder_font_color(color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color3B', 'name': 'color'}], 'sublime': 'set_placeholder_font_color(${1:color})$0'}, 'get_script_edit_box_handler()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_script_edit_box_handler'}, 'get_place_holder()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_place_holder'}, 'set_font(p_font_name, font_size)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'p_font_name'}, {'type': 'int', 'name': 'font_size'}], 'sublime': 'set_font(${1:p_font_name}, ${2:font_size})$0'}, 'set_placeholder_font_name(p_font_name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'p_font_name'}], 'sublime': 'set_placeholder_font_name(${1:p_font_name})$0'}, 'set_placeholder_font_size(font_size)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'font_size'}], 'sublime': 'set_placeholder_font_size(${1:font_size})$0'}, 'keyboard_did_hide(info)': {'ret_type': 'void', 'arguments': [{'type': 'IMEKeyboardNotificationInfo', 'name': 'info'}], 'sublime': 'keyboard_did_hide(${1:info})$0'}}, 'sfunctions': {'create(size, p_normal9_sprite_bg, tex_type)': {'ret_type': 'CCUI::EditBox', 'arguments': [{'type': 'CC::Size', 'name': 'size'}, {'type': 'string', 'name': 'p_normal9_sprite_bg'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'create(${1:size}, ${2:p_normal9_sprite_bg}, ${3:tex_type})$0'}, 'create(size, normal_sprite)': {'ret_type': 'CCUI::EditBox', 'arguments': [{'type': 'CC::Size', 'name': 'size'}, {'type': 'CCUI::Scale9Sprite', 'name': 'normal_sprite'}], 'sublime': 'create(${1:size}, ${2:normal_sprite})$0'}, 'create(size, p_normal9_sprite_bg)': {'ret_type': 'CCUI::EditBox', 'arguments': [{'type': 'CC::Size', 'name': 'size'}, {'type': 'string', 'name': 'p_normal9_sprite_bg'}], 'sublime': 'create(${1:size}, ${2:p_normal9_sprite_bg})$0'}, 'create(size, normal_sprite, pressed_sprite)': {'ret_type': 'CCUI::EditBox', 'arguments': [{'type': 'CC::Size', 'name': 'size'}, {'type': 'CCUI::Scale9Sprite', 'name': 'normal_sprite'}, {'type': 'CCUI::Scale9Sprite', 'name': 'pressed_sprite'}], 'sublime': 'create(${1:size}, ${2:normal_sprite}, ${3:pressed_sprite})$0'}, 'create(size, normal_sprite, pressed_sprite, disabled_sprite)': {'ret_type': 'CCUI::EditBox', 'arguments': [{'type': 'CC::Size', 'name': 'size'}, {'type': 'CCUI::Scale9Sprite', 'name': 'normal_sprite'}, {'type': 'CCUI::Scale9Sprite', 'name': 'pressed_sprite'}, {'type': 'CCUI::Scale9Sprite', 'name': 'disabled_sprite'}], 'sublime': 'create(${1:size}, ${2:normal_sprite}, ${3:pressed_sprite}, ${4:disabled_sprite})$0'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::PageView': {'base_class': 'CCUI::Layout', 'ifunctions': {'get_pages()': {'ret_type': 'CC::Vector<cocos2d::ui::Layout *>', 'arguments': [], 'sublime': 'get_pages'}, 'scroll_to_page(idx)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'idx'}], 'sublime': 'scroll_to_page(${1:idx})$0'}, 'set_custom_scroll_threshold(threshold)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'threshold'}], 'sublime': 'set_custom_scroll_threshold(${1:threshold})$0'}, 'remove_page(page)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::Layout', 'name': 'page'}], 'sublime': 'remove_page(${1:page})$0'}, 'remove_all_pages()': {'ret_type': 'void', 'arguments': [], 'sublime': 'remove_all_pages'}, 'get_page(index)': {'ret_type': 'CCUI::Layout', 'arguments': [{'type': 'int', 'name': 'index'}], 'sublime': 'get_page(${1:index})$0'}, 'add_event_listener(callback)': {'ret_type': 'void', 'arguments': [{'type': 'Proc', 'name': 'callback'}], 'sublime': 'add_event_listener(${1:callback})$0'}, 'insert_page(page, idx)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::Layout', 'name': 'page'}, {'type': 'int', 'name': 'idx'}], 'sublime': 'insert_page(${1:page}, ${2:idx})$0'}, 'add_page(page)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::Layout', 'name': 'page'}], 'sublime': 'add_page(${1:page})$0'}, 'set_using_custom_scroll_threshold(flag)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'flag'}], 'sublime': 'set_using_custom_scroll_threshold(${1:flag})$0'}, 'get_cur_page_index()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_cur_page_index'}, 'using_custom_scroll_threshold?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'using_custom_scroll_threshold?'}, 'add_widget_to_page(widget, page_idx, force_create)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::Widget', 'name': 'widget'}, {'type': 'int', 'name': 'page_idx'}, {'type': 'bool', 'name': 'force_create'}], 'sublime': 'add_widget_to_page(${1:widget}, ${2:page_idx}, ${3:force_create})$0'}, 'remove_page_at_index(index)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'index'}], 'sublime': 'remove_page_at_index(${1:index})$0'}, 'get_custom_scroll_threshold()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_custom_scroll_threshold'}}, 'sfunctions': {'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create()': {'ret_type': 'CCUI::PageView', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::RichElementText': {'base_class': 'CCUI::RichElement', 'ifunctions': {'init(tag, color, opacity, text, font_name, font_size)': {'ret_type': 'bool', 'arguments': [{'type': 'int', 'name': 'tag'}, {'type': 'CC::Color3B', 'name': 'color'}, {'type': 'int', 'name': 'opacity'}, {'type': 'string', 'name': 'text'}, {'type': 'string', 'name': 'font_name'}, {'type': 'float', 'name': 'font_size'}], 'sublime': 'init(${1:tag}, ${2:color}, ${3:opacity}, ${4:text}, ${5:font_name}, ${6:font_size})$0'}}, 'sfunctions': {'create(tag, color, opacity, text, font_name, font_size)': {'ret_type': 'CCUI::RichElementText', 'arguments': [{'type': 'int', 'name': 'tag'}, {'type': 'CC::Color3B', 'name': 'color'}, {'type': 'int', 'name': 'opacity'}, {'type': 'string', 'name': 'text'}, {'type': 'string', 'name': 'font_name'}, {'type': 'float', 'name': 'font_size'}], 'sublime': 'create(${1:tag}, ${2:color}, ${3:opacity}, ${4:text}, ${5:font_name}, ${6:font_size})$0'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::RichElement': {'base_class': 'CC::Ref', 'ifunctions': {'init(tag, color, opacity)': {'ret_type': 'bool', 'arguments': [{'type': 'int', 'name': 'tag'}, {'type': 'CC::Color3B', 'name': 'color'}, {'type': 'int', 'name': 'opacity'}], 'sublime': 'init(${1:tag}, ${2:color}, ${3:opacity})$0'}}, 'sfunctions': {'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::LayoutParameter': {'base_class': 'CC::Ref', 'ifunctions': {'clone()': {'ret_type': 'CCUI::LayoutParameter', 'arguments': [], 'sublime': 'clone'}, 'get_layout_type()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_layout_type'}, 'create_clone_instance()': {'ret_type': 'CCUI::LayoutParameter', 'arguments': [], 'sublime': 'create_clone_instance'}, 'copy_properties(model)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::LayoutParameter', 'name': 'model'}], 'sublime': 'copy_properties(${1:model})$0'}}, 'sfunctions': {'create()': {'ret_type': 'CCUI::LayoutParameter', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::RichElementImage': {'base_class': 'CCUI::RichElement', 'ifunctions': {'init(tag, color, opacity, file_path)': {'ret_type': 'bool', 'arguments': [{'type': 'int', 'name': 'tag'}, {'type': 'CC::Color3B', 'name': 'color'}, {'type': 'int', 'name': 'opacity'}, {'type': 'string', 'name': 'file_path'}], 'sublime': 'init(${1:tag}, ${2:color}, ${3:opacity}, ${4:file_path})$0'}}, 'sfunctions': {'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}, 'create(tag, color, opacity, file_path)': {'ret_type': 'CCUI::RichElementImage', 'arguments': [{'type': 'int', 'name': 'tag'}, {'type': 'CC::Color3B', 'name': 'color'}, {'type': 'int', 'name': 'opacity'}, {'type': 'string', 'name': 'file_path'}], 'sublime': 'create(${1:tag}, ${2:color}, ${3:opacity}, ${4:file_path})$0'}}}, 'CCUI::Button': {'base_class': 'CCUI::Widget', 'ifunctions': {'get_title_font_name()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_title_font_name'}, 'get_title_font_size()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_title_font_size'}, 'load_texture_normal(normal, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_texture_normal(${1:normal}, ${2:tex_type})$0'}, 'get_cap_insets_pressed_renderer()': {'ret_type': 'CC::Rect', 'arguments': [], 'sublime': 'get_cap_insets_pressed_renderer'}, 'get_cap_insets_disabled_renderer()': {'ret_type': 'CC::Rect', 'arguments': [], 'sublime': 'get_cap_insets_disabled_renderer'}, 'set_title_font_name(font_name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'font_name'}], 'sublime': 'set_title_font_name(${1:font_name})$0'}, 'load_texture_pressed(selected, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'selected'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_texture_pressed(${1:selected}, ${2:tex_type})$0'}, 'load_texture_pressed(selected)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'selected'}], 'sublime': 'load_texture_pressed(${1:selected})$0'}, 'get_title_color()': {'ret_type': 'CC::Color3B', 'arguments': [], 'sublime': 'get_title_color'}, 'load_textures(normal, selected, disabled, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}, {'type': 'string', 'name': 'selected'}, {'type': 'string', 'name': 'disabled'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_textures(${1:normal}, ${2:selected}, ${3:disabled}, ${4:tex_type})$0'}, 'load_textures(normal, selected)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}, {'type': 'string', 'name': 'selected'}], 'sublime': 'load_textures(${1:normal}, ${2:selected})$0'}, 'set_title_font_size(size)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'size'}], 'sublime': 'set_title_font_size(${1:size})$0'}, 'load_texture_normal(normal)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}], 'sublime': 'load_texture_normal(${1:normal})$0'}, 'set_cap_insets(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_cap_insets(${1:cap_insets})$0'}, 'set_cap_insets_disabled_renderer(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_cap_insets_disabled_renderer(${1:cap_insets})$0'}, 'load_texture_disabled(disabled, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'disabled'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_texture_disabled(${1:disabled}, ${2:tex_type})$0'}, 'set_scale9_enabled(able)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'able'}], 'sublime': 'set_scale9_enabled(${1:able})$0'}, 'get_zoom_scale()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_zoom_scale'}, 'set_title_text(text)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'text'}], 'sublime': 'set_title_text(${1:text})$0'}, 'set_cap_insets_pressed_renderer(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_cap_insets_pressed_renderer(${1:cap_insets})$0'}, 'set_title_color(color)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Color3B', 'name': 'color'}], 'sublime': 'set_title_color(${1:color})$0'}, 'load_texture_disabled(disabled)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'disabled'}], 'sublime': 'load_texture_disabled(${1:disabled})$0'}, 'scale9_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'scale9_enabled?'}, 'get_title_renderer()': {'ret_type': 'CC::Label', 'arguments': [], 'sublime': 'get_title_renderer'}, 'get_cap_insets_normal_renderer()': {'ret_type': 'CC::Rect', 'arguments': [], 'sublime': 'get_cap_insets_normal_renderer'}, 'set_pressed_action_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_pressed_action_enabled(${1:enabled})$0'}, 'set_zoom_scale(scale)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'scale'}], 'sublime': 'set_zoom_scale(${1:scale})$0'}, 'load_textures(normal, selected, disabled)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'normal'}, {'type': 'string', 'name': 'selected'}, {'type': 'string', 'name': 'disabled'}], 'sublime': 'load_textures(${1:normal}, ${2:selected}, ${3:disabled})$0'}, 'get_title_text()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_title_text'}, 'set_cap_insets_normal_renderer(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_cap_insets_normal_renderer(${1:cap_insets})$0'}}, 'sfunctions': {'create(normal_image, selected_image, disable_image, tex_type)': {'ret_type': 'CCUI::Button', 'arguments': [{'type': 'string', 'name': 'normal_image'}, {'type': 'string', 'name': 'selected_image'}, {'type': 'string', 'name': 'disable_image'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'create(${1:normal_image}, ${2:selected_image}, ${3:disable_image}, ${4:tex_type})$0'}, 'create()': {'ret_type': 'CCUI::Button', 'arguments': [], 'sublime': 'create'}, 'create(normal_image, selected_image)': {'ret_type': 'CCUI::Button', 'arguments': [{'type': 'string', 'name': 'normal_image'}, {'type': 'string', 'name': 'selected_image'}], 'sublime': 'create(${1:normal_image}, ${2:selected_image})$0'}, 'create(normal_image)': {'ret_type': 'CCUI::Button', 'arguments': [{'type': 'string', 'name': 'normal_image'}], 'sublime': 'create(${1:normal_image})$0'}, 'create(normal_image, selected_image, disable_image)': {'ret_type': 'CCUI::Button', 'arguments': [{'type': 'string', 'name': 'normal_image'}, {'type': 'string', 'name': 'selected_image'}, {'type': 'string', 'name': 'disable_image'}], 'sublime': 'create(${1:normal_image}, ${2:selected_image}, ${3:disable_image})$0'}, 'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::Widget': {'base_class': 'CC::ProtectedNode', 'ifunctions': {'set_size_type(type)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'type'}], 'sublime': 'set_size_type(${1:type})$0'}, 'set_flipped_x(flipped_x)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'flipped_x'}], 'sublime': 'set_flipped_x(${1:flipped_x})$0'}, 'get_callback_name()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_callback_name'}, 'unify_size_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'unify_size_enabled?'}, 'get_size_type()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_size_type'}, 'set_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_enabled(${1:enabled})$0'}, 'add_click_event_listener(callback)': {'ret_type': 'void', 'arguments': [{'type': 'Proc', 'name': 'callback'}], 'sublime': 'add_click_event_listener(${1:callback})$0'}, 'swallow_touches?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'swallow_touches?'}, 'focused?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'focused?'}, 'set_layout_parameter(parameter)': {'ret_type': 'void', 'arguments': [{'type': 'CCUI::LayoutParameter', 'name': 'parameter'}], 'sublime': 'set_layout_parameter(${1:parameter})$0'}, 'get_size_percent()': {'ret_type': 'CC::Vec2', 'arguments': [], 'sublime': 'get_size_percent'}, 'enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'enabled?'}, 'get_layout_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_layout_size'}, 'focus_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'focus_enabled?'}, 'set_callback_type(callback_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'callback_type'}], 'sublime': 'set_callback_type(${1:callback_type})$0'}, 'set_focused(focus)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'focus'}], 'sublime': 'set_focused(${1:focus})$0'}, 'set_size_percent(percent)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Vec2', 'name': 'percent'}], 'sublime': 'set_size_percent(${1:percent})$0'}, 'propagate_touch_events?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'propagate_touch_events?'}, 'get_current_focused_widget()': {'ret_type': 'CCUI::Widget', 'arguments': [], 'sublime': 'get_current_focused_widget'}, 'clone()': {'ret_type': 'CCUI::Widget', 'arguments': [], 'sublime': 'clone'}, 'set_focus_enabled(enable)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enable'}], 'sublime': 'set_focus_enabled(${1:enable})$0'}, 'get_left_boundary()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_left_boundary'}, 'get_action_tag()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_action_tag'}, 'set_layout_component_enabled(enable)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enable'}], 'sublime': 'set_layout_component_enabled(${1:enable})$0'}, 'get_bottom_boundary()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_bottom_boundary'}, 'get_top_boundary()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_top_boundary'}, 'get_touch_end_position()': {'ret_type': 'CC::Vec2', 'arguments': [], 'sublime': 'get_touch_end_position'}, 'set_bright(bright)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'bright'}], 'sublime': 'set_bright(${1:bright})$0'}, 'get_custom_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_custom_size'}, 'set_highlighted(hilight)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'hilight'}], 'sublime': 'set_highlighted(${1:hilight})$0'}, 'bright?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'bright?'}, 'set_touch_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_touch_enabled(${1:enabled})$0'}, 'flipped_x?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'flipped_x?'}, 'set_propagate_touch_events(propagate?)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'propagate?'}], 'sublime': 'set_propagate_touch_events(${1:propagate?})$0'}, 'get_world_position()': {'ret_type': 'CC::Vec2', 'arguments': [], 'sublime': 'get_world_position'}, 'flipped_y?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'flipped_y?'}, 'clipping_parent_contains_point?(pt)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Vec2', 'name': 'pt'}], 'sublime': 'clipping_parent_contains_point?(${1:pt})$0'}, 'set_position_type(type)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'type'}], 'sublime': 'set_position_type(${1:type})$0'}, 'request_focus()': {'ret_type': 'void', 'arguments': [], 'sublime': 'request_focus'}, 'get_layout_parameter()': {'ret_type': 'CCUI::LayoutParameter', 'arguments': [], 'sublime': 'get_layout_parameter'}, 'ignore_content_adapt_with_size(ignore)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'ignore'}], 'sublime': 'ignore_content_adapt_with_size(${1:ignore})$0'}, 'add_touch_event_listener(callback)': {'ret_type': 'void', 'arguments': [{'type': 'Proc', 'name': 'callback'}], 'sublime': 'add_touch_event_listener(${1:callback})$0'}, 'get_virtual_renderer_size()': {'ret_type': 'CC::Size', 'arguments': [], 'sublime': 'get_virtual_renderer_size'}, 'get_position_type()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_position_type'}, 'set_swallow_touches(swallow)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'swallow'}], 'sublime': 'set_swallow_touches(${1:swallow})$0'}, 'find_next_focused_widget(direction, current)': {'ret_type': 'CCUI::Widget', 'arguments': [{'type': 'int', 'name': 'direction'}, {'type': 'CCUI::Widget', 'name': 'current'}], 'sublime': 'find_next_focused_widget(${1:direction}, ${2:current})$0'}, 'update_size_and_position()': {'ret_type': 'void', 'arguments': [], 'sublime': 'update_size_and_position'}, 'highlighted?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'highlighted?'}, 'ignore_content_adapt_with_size?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'ignore_content_adapt_with_size?'}, 'set_bright_style(style)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'style'}], 'sublime': 'set_bright_style(${1:style})$0'}, 'get_right_boundary()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_right_boundary'}, 'set_flipped_y(flipped_y)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'flipped_y'}], 'sublime': 'set_flipped_y(${1:flipped_y})$0'}, 'touch_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'touch_enabled?'}, 'update_size_and_position(parent_size)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Size', 'name': 'parent_size'}], 'sublime': 'update_size_and_position(${1:parent_size})$0'}, 'set_action_tag(tag)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'tag'}], 'sublime': 'set_action_tag(${1:tag})$0'}, 'get_callback_type()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_callback_type'}, 'get_virtual_renderer()': {'ret_type': 'CC::Node', 'arguments': [], 'sublime': 'get_virtual_renderer'}, 'set_unify_size_enabled(enable)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enable'}], 'sublime': 'set_unify_size_enabled(${1:enable})$0'}, 'get_touch_began_position()': {'ret_type': 'CC::Vec2', 'arguments': [], 'sublime': 'get_touch_began_position'}, 'set_position_percent(percent)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Vec2', 'name': 'percent'}], 'sublime': 'set_position_percent(${1:percent})$0'}, 'get_touch_move_position()': {'ret_type': 'CC::Vec2', 'arguments': [], 'sublime': 'get_touch_move_position'}, 'get_position_percent()': {'ret_type': 'CC::Vec2', 'arguments': [], 'sublime': 'get_position_percent'}, 'add_ccsevent_listener(callback)': {'ret_type': 'void', 'arguments': [{'type': 'Proc', 'name': 'callback'}], 'sublime': 'add_ccsevent_listener(${1:callback})$0'}, 'layout_component_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'layout_component_enabled?'}, 'set_callback_name(callback_name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'callback_name'}], 'sublime': 'set_callback_name(${1:callback_name})$0'}, 'hit_test(pt)': {'ret_type': 'bool', 'arguments': [{'type': 'CC::Vec2', 'name': 'pt'}], 'sublime': 'hit_test(${1:pt})$0'}}, 'sfunctions': {'enable_dpad_navigation(enable)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enable'}], 'sublime': 'enable_dpad_navigation(${1:enable})$0'}, 'create()': {'ret_type': 'CCUI::Widget', 'arguments': [], 'sublime': 'create'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCUI::LoadingBar': {'base_class': 'CCUI::Widget', 'ifunctions': {'scale9_enabled?()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'scale9_enabled?'}, 'set_percent(percent)': {'ret_type': 'void', 'arguments': [{'type': 'float', 'name': 'percent'}], 'sublime': 'set_percent(${1:percent})$0'}, 'load_texture(texture)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'texture'}], 'sublime': 'load_texture(${1:texture})$0'}, 'get_percent()': {'ret_type': 'float', 'arguments': [], 'sublime': 'get_percent'}, 'get_cap_insets()': {'ret_type': 'CC::Rect', 'arguments': [], 'sublime': 'get_cap_insets'}, 'set_direction(direction)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'direction'}], 'sublime': 'set_direction(${1:direction})$0'}, 'get_direction()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_direction'}, 'set_scale9_enabled(enabled)': {'ret_type': 'void', 'arguments': [{'type': 'bool', 'name': 'enabled'}], 'sublime': 'set_scale9_enabled(${1:enabled})$0'}, 'set_cap_insets(cap_insets)': {'ret_type': 'void', 'arguments': [{'type': 'CC::Rect', 'name': 'cap_insets'}], 'sublime': 'set_cap_insets(${1:cap_insets})$0'}, 'load_texture(texture, tex_type)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'texture'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'load_texture(${1:texture}, ${2:tex_type})$0'}}, 'sfunctions': {'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}, 'create()': {'ret_type': 'CCUI::LoadingBar', 'arguments': [], 'sublime': 'create'}, 'create(texture_name, tex_type)': {'ret_type': 'CCUI::LoadingBar', 'arguments': [{'type': 'string', 'name': 'texture_name'}, {'type': 'int', 'name': 'tex_type'}], 'sublime': 'create(${1:texture_name}, ${2:tex_type})$0'}, 'create(texture_name)': {'ret_type': 'CCUI::LoadingBar', 'arguments': [{'type': 'string', 'name': 'texture_name'}], 'sublime': 'create(${1:texture_name})$0'}, 'create(texture_name, percentage)': {'ret_type': 'CCUI::LoadingBar', 'arguments': [{'type': 'string', 'name': 'texture_name'}, {'type': 'float', 'name': 'percentage'}], 'sublime': 'create(${1:texture_name}, ${2:percentage})$0'}, 'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create(texture_name, tex_type, percentage)': {'ret_type': 'CCUI::LoadingBar', 'arguments': [{'type': 'string', 'name': 'texture_name'}, {'type': 'int', 'name': 'tex_type'}, {'type': 'float', 'name': 'percentage'}], 'sublime': 'create(${1:texture_name}, ${2:tex_type}, ${3:percentage})$0'}}}, 'CCUI::TextBMFont': {'base_class': 'CCUI::Widget', 'ifunctions': {'set_fnt_file(file_name)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_name'}], 'sublime': 'set_fnt_file(${1:file_name})$0'}, 'get_string_length()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_string_length'}, 'get_string()': {'ret_type': 'string', 'arguments': [], 'sublime': 'get_string'}, 'set_string(value)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'value'}], 'sublime': 'set_string(${1:value})$0'}}, 'sfunctions': {'create_instance()': {'ret_type': 'CC::Ref', 'arguments': [], 'sublime': 'create_instance'}, 'create(text, filename)': {'ret_type': 'CCUI::TextBMFont', 'arguments': [{'type': 'string', 'name': 'text'}, {'type': 'string', 'name': 'filename'}], 'sublime': 'create(${1:text}, ${2:filename})$0'}, 'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}, 'create()': {'ret_type': 'CCUI::TextBMFont', 'arguments': [], 'sublime': 'create'}}}}, 'tree': {'CCUI': {'RelativeBox': 'CCUI::RelativeBox', 'CheckBox': 'CCUI::CheckBox', 'Layout': 'CCUI::Layout', 'TextAtlas': 'CCUI::TextAtlas', 'TextBMFont': 'CCUI::TextBMFont', 'LoadingBar': 'CCUI::LoadingBar', 'TextField': 'CCUI::TextField', 'Widget': 'CCUI::Widget', 'Scale9Sprite': 'CCUI::Scale9Sprite', 'VBox': 'CCUI::VBox', 'RichElementCustomNode': 'CCUI::RichElementCustomNode', 'Slider': 'CCUI::Slider', 'ListView': 'CCUI::ListView', 'RichElement': 'CCUI::RichElement', 'Button': 'CCUI::Button', 'LinearLayoutParameter': 'CCUI::LinearLayoutParameter', 'ScrollView': 'CCUI::ScrollView', 'LayoutParameter': 'CCUI::LayoutParameter', 'ImageView': 'CCUI::ImageView', 'HBox': 'CCUI::HBox', 'RichElementText': 'CCUI::RichElementText', 'PageView': 'CCUI::PageView', 'Helper': 'CCUI::Helper', 'EditBox': 'CCUI::EditBox', 'Text': 'CCUI::Text', 'RichText': 'CCUI::RichText', 'RichElementImage': 'CCUI::RichElementImage', 'RelativeLayoutParameter': 'CCUI::RelativeLayoutParameter'}}}
