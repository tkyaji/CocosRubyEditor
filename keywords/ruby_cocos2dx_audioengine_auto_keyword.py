def get_keywords():
	return {'classes': {'CCExp::AudioProfile': {'ifunctions': {}, 'sfunctions': {'new()': {'ret_type': 'void', 'arguments': [], 'sublime': 'new'}}}, 'CCExp::AudioEngine': {'ifunctions': {}, 'sfunctions': {'play2d(file_path)': {'ret_type': 'int', 'arguments': [{'type': 'string', 'name': 'file_path'}], 'sublime': 'play2d(${1:file_path})$0'}, 'play2d(file_path, loop, volume, profile)': {'ret_type': 'int', 'arguments': [{'type': 'string', 'name': 'file_path'}, {'type': 'bool', 'name': 'loop'}, {'type': 'float', 'name': 'volume'}, {'type': 'CCExp::AudioProfile', 'name': 'profile'}], 'sublime': 'play2d(${1:file_path}, ${2:loop}, ${3:volume}, ${4:profile})$0'}, 'get_duration(audio_id)': {'ret_type': 'float', 'arguments': [{'type': 'int', 'name': 'audio_id'}], 'sublime': 'get_duration(${1:audio_id})$0'}, 'lazy_init()': {'ret_type': 'bool', 'arguments': [], 'sublime': 'lazy_init'}, 'set_loop(audio_id, loop)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'audio_id'}, {'type': 'bool', 'name': 'loop'}], 'sublime': 'set_loop(${1:audio_id}, ${2:loop})$0'}, 'uncache(file_path)': {'ret_type': 'void', 'arguments': [{'type': 'string', 'name': 'file_path'}], 'sublime': 'uncache(${1:file_path})$0'}, 'get_current_time(audio_id)': {'ret_type': 'float', 'arguments': [{'type': 'int', 'name': 'audio_id'}], 'sublime': 'get_current_time(${1:audio_id})$0'}, 'stop(audio_id)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'audio_id'}], 'sublime': 'stop(${1:audio_id})$0'}, 'get_state(audio_id)': {'ret_type': 'int', 'arguments': [{'type': 'int', 'name': 'audio_id'}], 'sublime': 'get_state(${1:audio_id})$0'}, 'get_max_audio_instance()': {'ret_type': 'int', 'arguments': [], 'sublime': 'get_max_audio_instance'}, 'loop?(audio_id)': {'ret_type': 'bool', 'arguments': [{'type': 'int', 'name': 'audio_id'}], 'sublime': 'loop?(${1:audio_id})$0'}, 'resume(audio_id)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'audio_id'}], 'sublime': 'resume(${1:audio_id})$0'}, 'end()': {'ret_type': 'void', 'arguments': [], 'sublime': 'end'}, 'pause_all()': {'ret_type': 'void', 'arguments': [], 'sublime': 'pause_all'}, 'resume_all()': {'ret_type': 'void', 'arguments': [], 'sublime': 'resume_all'}, 'set_current_time(audio_id, time)': {'ret_type': 'bool', 'arguments': [{'type': 'int', 'name': 'audio_id'}, {'type': 'float', 'name': 'time'}], 'sublime': 'set_current_time(${1:audio_id}, ${2:time})$0'}, 'set_max_audio_instance(max_instances)': {'ret_type': 'bool', 'arguments': [{'type': 'int', 'name': 'max_instances'}], 'sublime': 'set_max_audio_instance(${1:max_instances})$0'}, 'get_default_profile()': {'ret_type': 'CCExp::AudioProfile', 'arguments': [], 'sublime': 'get_default_profile'}, 'pause(audio_id)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'audio_id'}], 'sublime': 'pause(${1:audio_id})$0'}, 'get_profile(name)': {'ret_type': 'CCExp::AudioProfile', 'arguments': [{'type': 'string', 'name': 'name'}], 'sublime': 'get_profile(${1:name})$0'}, 'play2d(file_path, loop)': {'ret_type': 'int', 'arguments': [{'type': 'string', 'name': 'file_path'}, {'type': 'bool', 'name': 'loop'}], 'sublime': 'play2d(${1:file_path}, ${2:loop})$0'}, 'set_volume(audio_id, volume)': {'ret_type': 'void', 'arguments': [{'type': 'int', 'name': 'audio_id'}, {'type': 'float', 'name': 'volume'}], 'sublime': 'set_volume(${1:audio_id}, ${2:volume})$0'}, 'get_volume(audio_id)': {'ret_type': 'float', 'arguments': [{'type': 'int', 'name': 'audio_id'}], 'sublime': 'get_volume(${1:audio_id})$0'}, 'stop_all()': {'ret_type': 'void', 'arguments': [], 'sublime': 'stop_all'}, 'get_profile(audio_id)': {'ret_type': 'CCExp::AudioProfile', 'arguments': [{'type': 'int', 'name': 'audio_id'}], 'sublime': 'get_profile(${1:audio_id})$0'}, 'uncache_all()': {'ret_type': 'void', 'arguments': [], 'sublime': 'uncache_all'}, 'play2d(file_path, loop, volume)': {'ret_type': 'int', 'arguments': [{'type': 'string', 'name': 'file_path'}, {'type': 'bool', 'name': 'loop'}, {'type': 'float', 'name': 'volume'}], 'sublime': 'play2d(${1:file_path}, ${2:loop}, ${3:volume})$0'}}}}, 'tree': {'CCExp': {'AudioProfile': 'CCExp::AudioProfile', 'AudioEngine': 'CCExp::AudioEngine'}}}
